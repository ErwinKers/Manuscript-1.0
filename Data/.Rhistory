date = 	"IntT",
Time = "IntD") %>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #7 04-may-2021 ----
CTD_may1 <- read.csv2("CTD Takvatn/CTD 1363 060521.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:237))%>% # selecting the downcast
select(Press, Temp, 'Ox..',"mg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "Ox..",
oxygen_mgL = "mg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))%>%
mutate(depth = depth * 1.4) # CTD depth measurements wrong trying to correct
# Tidying datafile #8 19-may-2021 ----
CTD_may2 <- read.csv2("CTD Takvatn/Copy of CTD 1350 200521.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:219))%>% # selecting the downcast
select(Press, Temp, 'OpOx..',"Opmg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "OpOx..",
oxygen_mgL = "Opmg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #9 08-jun-2021 ----
CTD_jun <- read.csv2("CTD Takvatn/Copy of CTD 1350 080621.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:154))%>% # selecting the downcast
select(Press, Temp, 'OpOx..',"Opmg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "OpOx..",
oxygen_mgL = "Opmg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Make one dataset ----
# making the combined dataframe
ctd <- rbind(CTD_nov,CTD_oct,CTD_jan,CTD_feb,CTD_mar,CTD_apr,CTD_may1,CTD_may2,CTD_jun)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
# Saving the new clean/combined data
write.csv(ctd,"C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Data", row.names = FALSE)
# Manually extracted hexidecimal ODV colour palette
ODV_colours <- c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa")
#The date column must then be converted to numeric values
ctd <- ctd %>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
# 1. Heat map temperature ----
Sys.setlocale("LC_TIME", "English")
ctd_mba <- ctd %>%
filter(depth < -0.1)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,temperature)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'temperature') %>%
filter(depth < -0.1) %>%
mutate(temp = round(temperature, 1))
#
ctdsub <- ctd %>%
mutate(date = as.Date(date))%>%
select(date,depth,temperature)
# colors for the plot
Temp_col <- c("red","purple", "light blue")
# Finally we create our gridded result
p1 <- ctd_mba %>%
mutate(date = date_decimal(date))%>%
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(Temp_col)) +
geom_contour(aes(z = temp), binwidth = 0.1, colour = "black", alpha = 0.2) +
geom_contour(aes(z = temp), breaks = 20, colour = "black")+
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.5, alpha = 0.4, shape = 8) +
labs(y = "depth (m)", x = NULL, fill = "Temp. (°C)") +
coord_cartesian(expand = 0)+
scale_x_date (breaks="month", labels = scales::label_date("%b"))
# 2. heat map fluorescence ----
ctd_mba <- ctd %>%
filter(depth < -0.1,fluorescence < 1)%>% # removes 2 observations (hit the bottom)
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,fluorescence)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'fluorescence') %>%
filter(depth < -0.1,fluorescence < 1) %>%
mutate(temp = round(fluorescence, 1))
#
ctdsub <- ctd %>%
filter(depth < -0.1,fluorescence < 1)%>%
mutate(date = as.Date(date))%>%
select(date,depth,fluorescence)
# colors for plot
Fluo_col <- c("darkgreen", "green", "white")
# Create fluorescence plot
p2 <- ctd_mba %>%
mutate(date = date_decimal(date))%>%
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(Fluo_col)) +
geom_contour(aes(z = temp), binwidth = 0.05, colour = "black", alpha = 0.3) +
geom_contour(aes(z = temp), breaks = 20, colour = "black") +
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.2, alpha = 0.4, shape = 8) +
###
labs(y = "depth (m)", x = "date", fill = "Fluor (µg/l)") +
coord_cartesian(expand = 0)+
scale_x_date (breaks="month", labels = scales::label_date("%b"))
# 3. oxygen sat map ----
ctd <- rbind(CTD_nov,CTD_oct,CTD_jan,CTD_feb,CTD_mar,CTD_apr,CTD_may2,CTD_jun)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
ctd_mba <- ctd %>%
filter(depth < -0.1)%>% # removes air observations
#filter(date == "2021-05-04")%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,oxygen_sat)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'oxygen_sat') %>%
filter(depth < -0.1) %>%
mutate(temp = round(oxygen_sat, 1))
#
ctdsub <- ctd %>%
mutate(date = as.Date(date))%>%
filter(depth < -0.1)%>%
select(date,depth,oxygen_sat)
# colours for plot
oxy_col <- c("blue"," light blue", "orange", "red")
# Create oxygen plot (oxygen sensor error removed)
p4 <- ctd_mba %>%
mutate(date = date_decimal(date))%>% # convert to normal date for x axis
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(oxy_col)) +
geom_contour(aes(z = temp), binwidth = 0.5, colour = "black", alpha = 0.2) +
geom_contour(aes(z = temp), breaks = 20, colour = "black") +
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.2, alpha = 0.4, shape = 8) +
###
labs(y = "depth (m)", x = "date", fill = "oxygen %") +
coord_cartesian(expand = 0) +
scale_x_date (breaks="month", labels = scales::label_date("%b"))
## combine plots ----
plot_grid(p1, p2,p4, labels = c('A', 'B', "C"))
#conditions
library(readxl)
library(dplyr)
library(ggthemes)
cond <- read_excel("C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Manuscript-1.0/Data/Environmental observations.xlsx")
#cond #just showing off the table
# barplot
# Ice below line, snow on top of line, include light data
cond$Datefix <-as.POSIXct(cond$Date,format="%d-%m-%Y%H:%M")
#barplot
condbar <-cond %>%
mutate_at("Ice thickness (cm)", funs(. * -1)) %>%
#mutate(.,Date=as.Date(Date)) %>%
pivot_longer(., cols = "Snow depth (cm)"  :"Ice thickness (cm)", names_to = "Type", values_to = "values")%>%
ggplot(., aes(x= Datefix, y=values, fill= Type)) +
geom_bar(stat="identity") +
labs( y = "Depth cm")+
xlim(c(as.POSIXct('2020-11-20 08:09', format = "%Y-%m-%d %H:%M"),
as.POSIXct('2021-07-15 17:31', format = "%Y-%m-%d %H:%M"))) +
geom_text(aes(label=values), position = position_stack(vjust= 0.5),
colour = "white", size = 2)+
geom_hline(yintercept=0, linetype="dashed", color = "black")+
scale_fill_manual(values=c("light blue", "grey"))
#possible to theme
# theme_tufte()
condbar
rotifer <- read_excel("C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Manuscript-1.0/Data/rotifer.xlsx")
Sys.setlocale("LC_TIME", "English")
Sys.setlocale("LC_TIME", "English")
# general: plotting the CTD data
#Tidying the data frames
setwd("C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Manuscript-1.0/Data")
# Load libraries for CTD plots
library(oce)
library(lubridate)
library(reshape2)
library(MBA)
library(mgcv)
library(plyr)
library(tidyverse)
library(dplyr)
library(cowplot)
# Formatted the data files selected:
# downcast
# correct series
# removed everything above -0.1 m depth
# Tidying datafile #1 27-oct-2020 ----
#as a pipe (O2_sat, O2_mgL)
CTD_oct <- read_csv2("CTD Takvatn/CTD 1335 291020.csv", skip =4) %>%
# remove the downcast
filter( Ser == 2)%>%
slice(c(1:131))%>% # selecting the downcast
select(Press, Temp, 'OpOx',Opmgl,Date,Time,"F")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F",
oxygen_sat = "OpOx",
oxygen_mgL = "Opmgl",
date = "Date")%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #2 24-nov-2020 ----
CTD_nov <- read_csv2("CTD Takvatn/CTD 1335 261120.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:168))%>% # selecting the downcast
select(Press, Temp,  'OpOx %',"Opmg/l",Date,Time,"F (?g/l)")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F (?g/l)",
oxygen_sat = "OpOx %",
oxygen_mgL = "Opmg/l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #3 15-jan-2021 ----
CTD_jan <- read_csv2("CTD Takvatn/CTD 1335 200121.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:226))%>% # selecting the downcast
select(Press, Temp, 'OpOx %',"Opmg/l",Date,Time,"F (?g/l)")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F (?g/l)",
oxygen_sat = "OpOx %",
oxygen_mgL = "Opmg/l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #4 05-feb-2021 ----
CTD_feb <- read_csv2("CTD Takvatn/CTD 1350 080221.csv", skip =4) %>%
filter( Ser == 2)%>%
slice(c(1:654))%>% # selecting the downcast
select(Press, Temp, 'OpOx %',"Opmg/l",Date,Time,"F (?g/l)")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F (?g/l)",
oxygen_sat = "OpOx %",
oxygen_mgL = "Opmg/l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #5 18-mar-2021 ----
CTD_mar <- read.csv2("CTD Takvatn/CTD 1350 180321.csv", skip =3) %>%
filter( Ser == 1)%>%
slice(c(1:148))%>% # selecting the downcast
select(Press, Temp, 'OpOx..',"Opmg.l",Date,Time,"F..μg.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F..μg.l.",
oxygen_sat = "OpOx..",
oxygen_mgL = "Opmg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #6 19-apr-2021 ----
#as a pipe (O2_sat, O2_mgL)
CTD_apr <- read.csv2("CTD Takvatn/Winterlakes 19.04.21.csv", skip =31) %>%
slice(-c(1))%>%
slice(c(1:1061))%>% # selecting the downcast
select(Press, Temp, 'Ri.O2',DO_mg,IntT,IntD,ChlAS)%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "ChlAS",
oxygen_sat = "Ri.O2",
oxygen_mgL = "DO_mg",
date = 	"IntT",
Time = "IntD") %>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #7 04-may-2021 ----
CTD_may1 <- read.csv2("CTD Takvatn/CTD 1363 060521.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:237))%>% # selecting the downcast
select(Press, Temp, 'Ox..',"mg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "Ox..",
oxygen_mgL = "mg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))%>%
mutate(depth = depth * 1.4) # CTD depth measurements wrong trying to correct
# Tidying datafile #8 19-may-2021 ----
CTD_may2 <- read.csv2("CTD Takvatn/Copy of CTD 1350 200521.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:219))%>% # selecting the downcast
select(Press, Temp, 'OpOx..',"Opmg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "OpOx..",
oxygen_mgL = "Opmg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Tidying datafile #9 08-jun-2021 ----
CTD_jun <- read.csv2("CTD Takvatn/Copy of CTD 1350 080621.csv", skip =4) %>%
filter( Ser == 1)%>%
slice(c(1:154))%>% # selecting the downcast
select(Press, Temp, 'OpOx..',"Opmg.l",Date,Time,"F...g.l.")%>%
rename(depth = "Press",
temperature = "Temp",
fluorescence = "F...g.l.",
oxygen_sat = "OpOx..",
oxygen_mgL = "Opmg.l",
date = 	Date)%>%
mutate(depth = -as.numeric(depth),
temperature = as.numeric(temperature),
fluorescence = as.numeric(fluorescence),
oxygen_sat = as.numeric(oxygen_sat),
oxygen_mgL = as.numeric(oxygen_mgL))
# Make one dataset ----
# making the combined dataframe
ctd <- rbind(CTD_nov,CTD_oct,CTD_jan,CTD_feb,CTD_mar,CTD_apr,CTD_may1,CTD_may2,CTD_jun)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
# Saving the new clean/combined data
write.csv(ctd,"C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Data", row.names = FALSE)
# Manually extracted hexidecimal ODV colour palette
ODV_colours <- c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa")
#The date column must then be converted to numeric values
ctd <- ctd %>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
# 1. Heat map temperature ----
Sys.setlocale("LC_TIME", "English")
ctd_mba <- ctd %>%
filter(depth < -0.1)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,temperature)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'temperature') %>%
filter(depth < -0.1) %>%
mutate(temp = round(temperature, 1))
#
ctdsub <- ctd %>%
mutate(date = as.Date(date))%>%
select(date,depth,temperature)
# colors for the plot
Temp_col <- c("red","purple", "light blue")
# Finally we create our gridded result
p1 <- ctd_mba %>%
mutate(date = date_decimal(date))%>%
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(Temp_col)) +
geom_contour(aes(z = temp), binwidth = 0.1, colour = "black", alpha = 0.2) +
geom_contour(aes(z = temp), breaks = 20, colour = "black")+
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.5, alpha = 0.4, shape = 8) +
labs(y = "depth (m)", x = NULL, fill = "Temp. (°C)") +
coord_cartesian(expand = 0)+
scale_x_date (breaks="month", labels = scales::label_date("%b"))
# 2. heat map fluorescence ----
ctd_mba <- ctd %>%
filter(depth < -0.1,fluorescence < 1)%>% # removes 2 observations (hit the bottom)
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,fluorescence)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'fluorescence') %>%
filter(depth < -0.1,fluorescence < 1) %>%
mutate(temp = round(fluorescence, 1))
#
ctdsub <- ctd %>%
filter(depth < -0.1,fluorescence < 1)%>%
mutate(date = as.Date(date))%>%
select(date,depth,fluorescence)
# colors for plot
Fluo_col <- c("darkgreen", "green", "white")
# Create fluorescence plot
p2 <- ctd_mba %>%
mutate(date = date_decimal(date))%>%
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(Fluo_col)) +
geom_contour(aes(z = temp), binwidth = 0.05, colour = "black", alpha = 0.3) +
geom_contour(aes(z = temp), breaks = 20, colour = "black") +
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.2, alpha = 0.4, shape = 8) +
###
labs(y = "depth (m)", x = "date", fill = "Fluor (µg/l)") +
coord_cartesian(expand = 0)+
scale_x_date (breaks="month", labels = scales::label_date("%b"))
# 3. oxygen sat map ----
ctd <- rbind(CTD_nov,CTD_oct,CTD_jan,CTD_feb,CTD_mar,CTD_apr,CTD_may2,CTD_jun)%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y"))
ctd_mba <- ctd %>%
filter(depth < -0.1)%>% # removes air observations
#filter(date == "2021-05-04")%>%
mutate(date = as.POSIXct(date,format="%d-%m-%Y")) %>%
mutate(date = decimal_date(date))%>%
select(date,depth,oxygen_sat)%>%
mba.surf(no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('date', 'depth'), value.name = 'oxygen_sat') %>%
filter(depth < -0.1) %>%
mutate(temp = round(oxygen_sat, 1))
#
ctdsub <- ctd %>%
mutate(date = as.Date(date))%>%
filter(depth < -0.1)%>%
select(date,depth,oxygen_sat)
# colours for plot
oxy_col <- c("blue"," light blue", "orange", "red")
# Create oxygen plot (oxygen sensor error removed)
p4 <- ctd_mba %>%
mutate(date = date_decimal(date))%>% # convert to normal date for x axis
mutate(date = as.Date(date))%>%
ggplot(aes(x = date, y = depth)) +
geom_raster(aes(fill = temp)) +
scale_fill_gradientn(colours = rev(oxy_col)) +
geom_contour(aes(z = temp), binwidth = 0.5, colour = "black", alpha = 0.2) +
geom_contour(aes(z = temp), breaks = 20, colour = "black") +
### Activate to see which pixels are real and not interpolated
geom_point(data = ctdsub, aes(x = date, y = depth),
colour = 'black', size = 0.2, alpha = 0.4, shape = 8) +
###
labs(y = "depth (m)", x = "date", fill = "oxygen %") +
coord_cartesian(expand = 0) +
scale_x_date (breaks="month", labels = scales::label_date("%b"))
## combine plots ----
plot_grid(p1, p2,p4, labels = c('A', 'B', "C"))
#conditions
library(readxl)
library(dplyr)
library(ggthemes)
cond <- read_excel("C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Manuscript-1.0/Data/Environmental observations.xlsx")
#cond #just showing off the table
# barplot
# Ice below line, snow on top of line, include light data
cond$Datefix <-as.POSIXct(cond$Date,format="%d-%m-%Y%H:%M")
#barplot
condbar <-cond %>%
mutate_at("Ice thickness (cm)", funs(. * -1)) %>%
#mutate(.,Date=as.Date(Date)) %>%
pivot_longer(., cols = "Snow depth (cm)"  :"Ice thickness (cm)", names_to = "Type", values_to = "values")%>%
ggplot(., aes(x= Datefix, y=values, fill= Type)) +
geom_bar(stat="identity") +
labs( y = "Depth cm")+
xlim(c(as.POSIXct('2020-11-20 08:09', format = "%Y-%m-%d %H:%M"),
as.POSIXct('2021-07-15 17:31', format = "%Y-%m-%d %H:%M"))) +
geom_text(aes(label=values), position = position_stack(vjust= 0.5),
colour = "white", size = 2)+
geom_hline(yintercept=0, linetype="dashed", color = "black")+
scale_fill_manual(values=c("light blue", "grey"))
#possible to theme
# theme_tufte()
condbar
rotifer <- read_excel("C:/Users/Erwin/OneDrive/Manuscript Erwin Kers/R script + data/Manuscript-1.0/Data/rotifer.xlsx")
